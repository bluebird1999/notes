--------------------------------------------------Clock Structure--------------------------------------------------

* Clock device structure is platform dependant, for example MX35, it is:

			---arch/arm/plat-mxc/include/mach/clock.h---
			struct clk {
			#ifndef CONFIG_COMMON_CLKDEV
				/* As soon as i.MX1 and i.MX31 switched to clkdev, this* block can go away */
				struct list_head node;
				struct module *owner;
				const char *name;
			#endif
				int id;
				/* Source clock this clk depends on */
				struct clk *parent;
				/* Secondary clock to enable/disable with this clock */
				struct clk *secondary;
				/* Current clock rate */
				unsigned long rate;
				/* Reference count of clock enable/disable */
				__s8 usecount;
				/* Register bit position for clock's enable/disable control. */
				u8 enable_shift;
				/* Register address for clock's enable/disable control. */
				void __iomem *enable_reg;
				u32 flags;
				/* Function ptr to recalculate the clock's rate based on parent
				   clock's rate */
				void (*recalc) (struct clk *);
				/* Function ptr to set the clock to a new rate. The rate must match a
				   supported rate returned from round_rate. Leave blank if clock is not
				   programmable */
				int (*set_rate) (struct clk *, unsigned long);
				/* Function ptr to round the requested clock rate to the nearest
				   supported rate that is less than or equal to the requested rate. */
				unsigned long (*round_rate) (struct clk *, unsigned long);
				/* Function ptr to enable the clock. Leave blank if clock can not
				   be gated. */
				int (*enable) (struct clk *);
				/* Function ptr to disable the clock. Leave blank if clock can not
				   be gated. */
				void (*disable) (struct clk *);
				/* Function ptr to set the parent clock of the clock. */
				int (*set_parent) (struct clk *, struct clk *);
			};

